@model SB.AR.AppWeb.ViewModels.DisposalFinancialsViewModel
<form id="arfrm" method="post" action="/financials/savear" enctype="application/x-www-form-urlencoded">
    <input type="hidden" name="id" value="@Model.AR.ID">
    @Html.HiddenFor(m => m.IsDisposalFinance)
    <input type="hidden" name="IsFinanceTab" value="true">
    <ul class="row narrative-bottom-area">
        <li>
            <div class="col-sm-11" style="width:94.5%;">
                <label style="width:100%">Condition of Assets/ Reason for Disposal <span class="mandatory">*</span></label>
                @Html.TextAreaFor(m => m.Condition_of_Assets, new { required = "required", id = "ConditionOfAssets" })
            </div>
            <div class="col-sm-1" style="padding-top: 131px; padding-left: 0px; width: 5.5%;">
                @{
                    ASPNetSpell.Razor.SpellButton btnSpellButtonPresentSituationIssue = new ASPNetSpell.Razor.SpellButton();
                    btnSpellButtonPresentSituationIssue.InstallationPath = ("/Content/ASPNetSpellInclude");
                    btnSpellButtonPresentSituationIssue.FieldsToSpellCheck = "ConditionOfAssets";
                }
                @Html.Raw(btnSpellButtonPresentSituationIssue.getHtml())
            </div>
        </li>
        <li class="col-sm-6 financial-top-area">
            <div class="vertical-middle">
                <label>Original Cost</label>
                @Html.EditorFor(model => model.Original_Cost, new { htmlAttributes = new { @type = "text", @class = "number", @min = "0" } })
            </div>
            <div class="vertical-middle">
                <label>Market Value</label>
                @Html.EditorFor(model => model.Market_Value, new { htmlAttributes = new { @type = "text", @class = "number", @min = "0" } })
            </div>
            <div class="vertical-middle">
                <label>Current Net Book Value</label>
                @Html.EditorFor(model => model.Current_Net_Book_Value, new { htmlAttributes = new { @type = "text", @class = "number", @min = "0" } })

            </div>
            <div class="vertical-middle">
                <label>Expected Proceeds<span class="mandatory">*</span></label>
                @Html.EditorFor(model => model.Expected_Proceeds, new { htmlAttributes = new { @required = "required", @type = "text", @class = "number", @min = "0" } })
            </div>
            <div class="vertical-middle">
                <label>Equity Description</label>
                @Html.EditorFor(m => m.Equity_Description, new { placeholder = "Enter Equity Description" })
            </div>
        </li>

        <li class="col-sm-6 financial-top-area">

            <div class="vertical-middle dcc-list">
                <div class="width">
                    <label class="">Date Acquired</label>
                </div>
                <div class='IE input-group date datetimepicker width ' id='' style="  width: 54% ">
                    @Html.TextBoxFor(m => m.Date_Aquired, new { @class = "left5 LabelFulll form-control forms br-none", @placeholder = "MM-DD-YYYY" })
                    <span class="input-group-addon input-adss"><span class="glyphicon glyphicon-calendar"></span></span>
                </div>
                <div class='nonIE input-group date datetimepicker width ' id='' style=" margin-left: -15px !important; width: 53% !important;">
                    @Html.TextBoxFor(m => m.Date_Aquired, new { @class = "left5 LabelFulll form-control forms br-none", @placeholder = "MM-DD-YYYY" })
                    <span class="input-group-addon input-adss"><span class="glyphicon glyphicon-calendar"></span></span>
                </div>
            </div>


            <div class="vertical-middle ">
                <label>Department to Change</label>
                @Html.EditorFor(m => m.Department_to_Charge, new { placeholder = "Department to Charge" })
            </div>
        </li>

    </ul>
    <script src="~/Scripts/Seaboard/CurrencyFormatter.js"></script>
    <script type="text/javascript">
       
        $(document).ready(function () {
          


            $('.datetimepicker').datetimepicker({ format: 'MM-DD-YYYY' });
            $('.selectpicker').selectpicker();
            totalCostCalculate();
            function totalCostCalculate()
            {
                var expProceeds = $("#Expected_Proceeds").val();
                expProceeds = expProceeds.replace("$", "");
                if (expProceeds == "")
                    expProceeds = "0";
                var total = parseFloat(expProceeds);
                SetTotalCost(total);
            }
            $("#Expected_Proceeds").blur(function () {

                totalCostCalculate();
            });
        });
    </script>
</form>